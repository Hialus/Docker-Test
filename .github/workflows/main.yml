name: Deploy to Testserver

on:
  pull_request:
    types: [labeled]

jobs:
  check-group:
    runs-on: ubuntu-latest
    steps:
    - name: Get team ID
      id: get_team_id
      run: |
        echo "::set-output name=team_id::$(curl -H \"Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}\" -s https://api.github.com/orgs/ls1intum/teams | jq -r '.[] | select(.slug == \"artemis-developers\") | .id')"

    - name: Check team membership
      run: |
        user=$(echo "${{ github.event.sender.login }}")
        team_id="${{ steps.get_team_id.outputs.team_id }}"
        membership=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s https://api.github.com/teams/${team_id}/memberships/${user} | jq -r '.state')

        if [[ "${membership}" == "active" ]]; then
          echo "User is a member of artemis-developers team"
        else
          echo "User is not a member of artemis-developers team"
          exit 1
        fi
      - name: Get membership info
        id: check_membership
        uses: octokit/request-action@v2.x
        with:
          route: GET /orgs/ls1intum/teams/artemis-developers/memberships/${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo You need to be a part of the artemis-developers group in the ls1intum organization to deploy to test servers."
        if: ${{ failure() }} && ${{ steps.check_membership.outputs.status }} == 404
      - run: "echo An unknown error occured when retrieving the membership info of user ${{ github.actor }}. The status code is: ${{ steps.check_membership.outputs.status }}"
        if: ${{ failure() }} && ${{ steps.check_membership.outputs.status }} != 404

  check-build:
    needs: [check-group]
    runs-on: ubuntu-latest
    steps:
      - name: Get latest successful build for branch
        id: check_build
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/Hialus/Docker-Test/actions/workflows/build2.yml/runs?event=pull_request&status=success&head_sha=${{ github.event.pull_request.head.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if latest push had successful build
        if: fromJSON(steps.check_build.outputs.data).total_count == 0
        uses: actions/github-script@v3
        with:
          script: |
              echo '${{ fromJSON(steps.check_build.outputs.data).total_count }}'
              core.setFailed('The build needs to run through first!')

  setup:
    needs: [check-build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: artemis-test4.artemis.cit.tum.de
            lock_label: artemis-test4
            url: https://artemis-test4.artemis.cit.tum.de
            user: deployment
            hosts: artemis-test4.artemis.cit.tum.de
            folder: /opt/artemis
            host_keys: |
              artemis-test4.artemis.cit.tum.de ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCwYFngAYWkI7yaf/6Ni81xCgWyh2gFlGPsUBq57iwROEQjfebTB8lWk2VfC3uCNXIEYB0IBQptPljRF2yQq+vUUeMerzXd5D/aeDmtS59f/z3W3ah3k3N7y5kFmBTGdvg53l+B34lQG6bEbB4McX8MhSUYdtAkp6Sc5EcxXiaDhcgGMCtXSMBJUrIGN+Is4AlWlqCGkL1KP+Y23rOaL3co+RppkcPDoKat8BZD2EbVBp9ZqqAVc+qIud/IMbTVZkhnaNoC0K33aoBLtauoTbYo/5kOlwFCDGM+NiNaXrOF5ANGJxX8WYoFXWVxxJFDVAm3x7ajZqydmkxWhPfUa9LIIEy2QbmeYvosfd8p/5STOQCHqE9dLHwjtin/vL1b0HmclIQUhrMVYMTeJNSCN9D2uRcU9U7Cz4qbX9s6/eCVjHfTkr+b0gvM1tm5OwZBaH1++aJj4JakACgwHZoRV08hmf6jGHVCoVStCOCe0TUT9enCMPs+Y+BFuoDWVlOLDi8=
              artemis-test4.artemis.cit.tum.de ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHyKKZgX8bZ+k7N/B42LhBvJG2FcNhPL11q2L9FYDV/N2DAMHnBaxoruw+NdIaG0b/rfseUJKXPQiY6TMr0kOrk=
              artemis-test4.artemis.cit.tum.de ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE9lVNwikkOcJb/7BdV200KcEtpisvhkOHMcKZeF3Tvb

          - environment: artemis-test5.artemis.cit.tum.de
            lock_label: artemis-test5
            url: https://artemis-test5.artemis.cit.tum.de
            user: deployment
            hosts: artemis-test5.artemis.cit.tum.de
            folder: /opt/artemis
            host_keys: |
              artemis-test5.artemis.cit.tum.de ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQD0NyNrw8dlJ99iGRSQ5IemSBpJyruNjFFFquiv8wsVRsBL6XPNySmZm0XWh8MjLxlL7DH3rUxXupaAnH6kQAAzt9gbWS4E+k21sfoKU0muf9rE1e7rUjnKgOm70b+6kpc7AS8HBAmzS2GuDzufPiyPYlUjozLhb2nAN685lT2v/Ofoe8tdWsR7AkB9pJE5P4NhAS/a4JujpyhO186F+SyT9k4X8FlfMi40qdBm1eIkg+eljVfbaIn0pKdoy/n8s0ODWu7vZpzNQxZb7qm5ROUjTqObSqsUA8oQv0JuWf4oudVLg3gxV1fEmEdAaWFt6W2mkiFaLeYTrhdtwD627WCyUPaSGe8yy8itEPsw2edfKZqb7s0+H6SlgvqR4rtKkbXs5gMG3Q2Ezj1C4SYrR/ME6oy6xt0zQEG7hiKIl2ArFZA6xRnhnqck8sTr+6oqRdNbKeErYroOYwKquNfuLHv1Fy2OpefMI+tjWSIFhDYDW2Y9d/ySPETyhHmZrn40Bk8=
              artemis-test5.artemis.cit.tum.de ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBImSPJjIhJGsbUABhZfjM5vbc0UVC7JTDS1xwdIdJfAIEMo101EIS98C340VtiU4f6G2z59zpRB1Udptv1cxbPI=
              artemis-test5.artemis.cit.tum.de ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHonMyIKiEHw7miwe5PJMDvWO/PwTpQpFYsvi2DUXYrO

          - environment: artemis-test6.artemis.cit.tum.de
            lock_label: artemis-test6
            url: https://artemis-test6.artemis.cit.tum.de
            user: deployment
            hosts: artemis-test6.artemis.cit.tum.de
            folder: /opt/artemis
            host_keys: |
              artemis-test6.artemis.cit.tum.de ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDKF/XYwHLiJ8JzYgcjxC9xRFrZqkLZz1sXa2PzJPTVzf+Ms58Emcor1/9Th+HgFtksEN2rsgPJackGBdigoDJn2n9ALzioWjIjdp4aH2Vl7wl91+ms2EWsAp1ZzywCFDYTQwqhmfztyS+SgKUrBGXJ+BB9rl115/0bt0wRCVhlI/QOWBp2renogzt/39BHEVNUp1dLeAReQmDjkiPZGyShkEVi1pODpIYoQ9KPcBlbT3/T5G3WaQDWZyt7J7vZa+nEI7rMRYcNF9RyqMs96dHmivputjg9ESNX9tH+3YonwCKdt2jCoV76VD31S3F7uK2pz5L7GdakM9n3CiT7K7msg7zFAPrxFoV3POpqWMc3NxEB7ZufQCL/VJ5mTZmj6jSUIRXsOdzZpgb6ZdqXd4cdWX56VY1YZwnXk9rxwxPDLyl3ugspvW9pmAJuk0/kltSq7j8w5toiclKgUte2CwrqOFdoj05m+1C1pUwCoeKxuV0ugHOS/M1fM64wikj9+cU=
              artemis-test6.artemis.cit.tum.de ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI5x3Yh7ecWwh+oitXTMwRnjyVRwlikkIqvmpYb4TF6rgSxBAxfkiWHiEyTWS7eBtdhp/v0FmhJV9dsehZSxZYQ=
              artemis-test6.artemis.cit.tum.de ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMZdVOmY8K39PId1WPGMZaQwJvtDbGqJTdJX26YtDXgI
    outputs:
      TS4: ${{ steps.matrix.outputs.artemis-test4 || '' }}
      TS5: ${{ steps.matrix.outputs.artemis-test5 || '' }}
      TS6: ${{ steps.matrix.outputs.artemis-test6 || '' }}
    steps:
      - id: matrix
        env:
          MATRIX_JSON: ${{ toJSON(matrix) }}
#       if: matrix.c
        run: |
          MATRIX_JSON=${MATRIX_JSON//$'\n'/}
          echo "${{ matrix.lock_label }}=$MATRIX_JSON" >> $GITHUB_OUTPUT
          
  process:
    needs: [ setup ]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.process.outputs.matrix }}
    steps:
      - id: process
        env:
          MATRIX_JSON: ${{ toJSON(needs.setup.outputs.*) }}
        run: |
          MATRIX_JSON=${MATRIX_JSON//$'\n'/}
          MATRIX_JSON=${MATRIX_JSON//$'"{'/'{'}
          MATRIX_JSON=${MATRIX_JSON//$'}"'/'}'}
          MATRIX_JSON=${MATRIX_JSON//$'\\"'/'"'}
          echo "$MATRIX_JSON"
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  echo:
    needs: [ process ]
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo '${{ needs.process.outputs.matrix }}'

  build:
    needs: [ process ]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.process.outputs.matrix) }}
    steps:
      - run: |
          cat - <<< $(sed 's/\\n/\n/g' <<< "${{ matrix.host_keys }}")

